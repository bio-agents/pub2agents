
################
Ideas for future
################

Sometimes ideas are emerging. These are written down here for future reference. A written down idea is not necessarily a good idea, thus not all points here should be implemented.

* Fix potential systematic issues discovered from feedback of curation of Pub2Agents results.
* Currently, Pub2Agents has been tweaked in the direction of having less false positives (for example, even many entries with "very low" :ref:`confidence <usage_confidence>` are about agents) to not discourage curators too much into looking at all results of Pub2Agents. But maybe the amount of false negatives could also be decreased further without too much cost, for example by :ref:`running Pub2Agents on existing bio.agents content <improving_existing>` and checking if there are any ways to reduce entries with :ref:`include <include>` ``false``.
* Also, if some entries are added through some other means than Pub2Agents, then Pub2Agents could be run on publications of these entries and then it could be checked how many of these entries Pub2Agents fails to include and why.
* The default values of the mapping parameters in the :ref:`-map <map>` step are equal to the default values defined for the parameters in `EDAMmap <https://github.com/edamontology/edammap>`_. Maybe some defaults could be changed for Pub2Agents, for example the number of terms output per branch?
* Maybe the :ref:`score <score>` or :ref:`score2 <score2>` could also be modified by how well the entry could be mapped to EDAM terms by EDAMmap_ in the :ref:`-map <map>` step?
* Could the currently unused :ref:`citations_count_normalised <citations_count_normalised>` also be used for modifying the goodness of entries? Note, that its value could only be useful for older publications as these have had enough time to be cited.
* Could MeSH terms be used in :ref:`-select-pub <select_pub>` to prefilter the publications in addition to or instead of selection based on occurrence of phrases in the abstract and title? PubFetcher and the `mesh field <https://pubfetcher.readthedocs.io/en/stable/output.html#mesh>`_ of its database can be used to look for prevalence of MeSH terms in publications currently in bio.agents. Note, that the selection by MeSH terms can't return recent publications, as these terms are not added to articles right away (for example, it might take half a year after the publication date for the terms to appear).
* How to best present the provenance (i.e. publication IDs and web page URLs where information was found) of the licenses and languages to the curator? As this extra information can't be embedded into :ref:`to_bioagents_json` and it must currently manually be looked up from :ref:`results.csv <results_csv>`.
* Currently, the :ref:`merging of supposedly duplicate results <merge_same_suggestions>` is done base on the exact equality of the :ref:`suggested names <suggestion>` only. Maybe further features should be taken into account, like matching links or credits, to reduce the number of wrongly merged results?
* Further links could potentially be found by looking for links in the content of web pages extracted from the publication abstract and fulltext. But to avoid false positive, maybe links from the same domain should only be considered and maybe "about", "help", etc should be looked for in the URL string? Also, in some cases further links could be automatically inferred, like a documentation URL for a given `CRAN <https://cran.r-project.org/>`_ URL.
* Currently, each link receives exactly one type (like "Repository" or "Mailing list"), however bioagentsSchema allows for more than one type to be specified.
* Explore the possibilities of extracting agents through other means than publications present in `Europe PMC <https://europepmc.org/>`_. Maybe from repositories, like `GitHub <https://github.com/>`_, CRAN_, `Zenodo <https://zenodo.org/>`_, `PyPi <https://pypi.org/>`_, `GitLab <https://gitlab.com/explore>`_, `Docker Hub <https://hub.docker.com/>`_, `Bioconductor <https://www.bioconductor.org/>`_, etc?
* Maybe get published agents and databases also outside of the biomedical field (like physics, chemistry, etc, so science.agents?) by using additional `academic databases and search engines <https://en.wikipedia.org/wiki/List_of_academic_databases_and_search_engines>`_?
* Try running Pub2Agents on all publications from a given period, i.e. without prefiltering with :ref:`-select-pub <select_pub>`. This could be achieved for the Open Access subset of articles, that can be `downloaded in bulk <https://europepmc.org/downloads>`_ (as using `PubFetcher <https://github.com/edamontology/pubfetcher>`_ to download millions of articles would be too wasteful and slow).
* Conversely, try running Pub2Agents on only the most cited publications (throughout history) to ensure that bio.agents has at least the most popular agents.
* For most used agents, try also to find other sources, e.g. GitHub stars and follows.
* Run and work through :ref:`improving_existing`.
* Try to automatically fill further attributes, without causing too many false positives, for example `operating system <https://bioagents.readthedocs.io/en/latest/curators_guide.html#operating-system>`_ or the bio.agents specific `agent type <https://bioagents.readthedocs.io/en/latest/curators_guide.html#agent-type>`_.
* Currently, the :ref:`description <usage_description>` is filled with candidate phrases that the curator must choose from or combine. Automatic text summarisation could be tried to automatically construct the final description proposal. Or, just choose one/two of the candidate phrases automatically (instead of the curator making the choice). Maybe by using `LLMs <https://en.wikipedia.org/wiki/Large_language_model>`_.
* Try to figure out which of the description :ref:`messages <messages>` are actually useful.
* The :ref:`credit <usage_credit>` is currently filled only from corresponding authors of publications. Explore other possibilities to find credit information, for example contact information is sometimes mentioned in the publication abstract.
* Try using `LLMs <https://en.wikipedia.org/wiki/Large_language_model>`_. Ask if the abstract (possibly `bulk downloaded <https://europepmc.org/downloads>`_) is about a agent/database, and if so, what is the name, homepage, etc.
